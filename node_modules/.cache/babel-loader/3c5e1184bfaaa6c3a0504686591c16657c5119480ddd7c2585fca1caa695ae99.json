{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalil\\\\Downloads\\\\calculadora-simples-react\\\\src\\\\CalculadoraSimples.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalculadoraSimples() {\n  _s();\n  const [display, setDisplay] = useState(\"0\");\n  const [operand, setOperand] = useState(null);\n  const [operator, setOperator] = useState(null);\n  const [lastInput, setLastInput] = useState(\"\");\n  const handleClick = value => {\n    if (!isNaN(value) || value === \".\") {\n      if (display === \"0\" || lastInput === \"=\") {\n        setDisplay(value);\n      } else {\n        setDisplay(display + value);\n      }\n      setLastInput(value);\n    } else if ([\"+\", \"-\", \"*\", \"/\"].includes(value)) {\n      setOperand(parseFloat(display));\n      setOperator(value);\n      setDisplay(\"0\");\n      setLastInput(value);\n    } else if (value === \"=\") {\n      if (operator && operand !== null) {\n        const current = parseFloat(display);\n        let result = 0;\n        switch (operator) {\n          case \"+\":\n            result = operand + current;\n            break;\n          case \"-\":\n            result = operand - current;\n            break;\n          case \"*\":\n            result = operand * current;\n            break;\n          case \"/\":\n            result = current !== 0 ? operand / current : \"Erro\";\n            break;\n          default:\n            break;\n        }\n        setDisplay(result.toString());\n        setOperand(null);\n        setOperator(null);\n        setLastInput(\"=\");\n      }\n    } else if (value === \"C\") {\n      setDisplay(\"0\");\n      setOperand(null);\n      setOperator(null);\n      setLastInput(\"\");\n    } else if (value === \"+/-\") {\n      setDisplay((parseFloat(display) * -1).toString());\n    } else if (value === \"%\") {\n      setDisplay((parseFloat(display) / 100).toString());\n    }\n  };\n  const buttons = [[\"C\", \"+/-\", \"%\", \"/\"], [\"7\", \"8\", \"9\", \"*\"], [\"4\", \"5\", \"6\", \"-\"], [\"1\", \"2\", \"3\", \"+\"], [\"0\", \".\", \"=\"]];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 300,\n      margin: \"50px auto\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#000\",\n        color: \"#fff\",\n        padding: \"20px\",\n        fontSize: \"32px\",\n        textAlign: \"right\",\n        borderRadius: \"10px 10px 0 0\"\n      },\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(4, 1fr)\",\n        gap: \"5px\",\n        padding: \"10px\",\n        background: \"#333\",\n        borderRadius: \"0 0 10px 10px\"\n      },\n      children: buttons.flat().map((btn, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(btn),\n        style: {\n          padding: \"20px\",\n          fontSize: \"20px\",\n          borderRadius: \"10px\",\n          backgroundColor: [\"+\", \"-\", \"*\", \"/\", \"=\"].includes(btn) ? \"#f90\" : \"#555\",\n          color: \"#fff\",\n          gridColumn: btn === \"0\" ? \"span 2\" : \"auto\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: btn\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(CalculadoraSimples, \"jz8qCiotG3ofTlF1T9uX5sGkBlU=\");\n_c = CalculadoraSimples;\nvar _c;\n$RefreshReg$(_c, \"CalculadoraSimples\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CalculadoraSimples","_s","display","setDisplay","operand","setOperand","operator","setOperator","lastInput","setLastInput","handleClick","value","isNaN","includes","parseFloat","current","result","toString","buttons","style","maxWidth","margin","fontFamily","children","background","color","padding","fontSize","textAlign","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","gap","flat","map","btn","index","onClick","backgroundColor","gridColumn","border","cursor","_c","$RefreshReg$"],"sources":["C:/Users/dalil/Downloads/calculadora-simples-react/src/CalculadoraSimples.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function CalculadoraSimples() {\n  const [display, setDisplay] = useState(\"0\");\n  const [operand, setOperand] = useState(null);\n  const [operator, setOperator] = useState(null);\n  const [lastInput, setLastInput] = useState(\"\");\n\n  const handleClick = (value) => {\n    if (!isNaN(value) || value === \".\") {\n      if (display === \"0\" || lastInput === \"=\") {\n        setDisplay(value);\n      } else {\n        setDisplay(display + value);\n      }\n      setLastInput(value);\n    } else if ([\"+\", \"-\", \"*\", \"/\"].includes(value)) {\n      setOperand(parseFloat(display));\n      setOperator(value);\n      setDisplay(\"0\");\n      setLastInput(value);\n    } else if (value === \"=\") {\n      if (operator && operand !== null) {\n        const current = parseFloat(display);\n        let result = 0;\n        switch (operator) {\n          case \"+\": result = operand + current; break;\n          case \"-\": result = operand - current; break;\n          case \"*\": result = operand * current; break;\n          case \"/\": result = current !== 0 ? operand / current : \"Erro\"; break;\n          default: break;\n        }\n        setDisplay(result.toString());\n        setOperand(null);\n        setOperator(null);\n        setLastInput(\"=\");\n      }\n    } else if (value === \"C\") {\n      setDisplay(\"0\");\n      setOperand(null);\n      setOperator(null);\n      setLastInput(\"\");\n    } else if (value === \"+/-\") {\n      setDisplay((parseFloat(display) * -1).toString());\n    } else if (value === \"%\") {\n      setDisplay((parseFloat(display) / 100).toString());\n    }\n  };\n\n  const buttons = [\n    [\"C\", \"+/-\", \"%\", \"/\"],\n    [\"7\", \"8\", \"9\", \"*\"],\n    [\"4\", \"5\", \"6\", \"-\"],\n    [\"1\", \"2\", \"3\", \"+\"],\n    [\"0\", \".\", \"=\"],\n  ];\n\n  return (\n    <div style={{ maxWidth: 300, margin: \"50px auto\", fontFamily: \"Arial\" }}>\n      <div style={{\n        background: \"#000\",\n        color: \"#fff\",\n        padding: \"20px\",\n        fontSize: \"32px\",\n        textAlign: \"right\",\n        borderRadius: \"10px 10px 0 0\"\n      }}>\n        {display}\n      </div>\n      <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4, 1fr)\", gap: \"5px\", padding: \"10px\", background: \"#333\", borderRadius: \"0 0 10px 10px\" }}>\n        {buttons.flat().map((btn, index) => (\n          <button\n            key={index}\n            onClick={() => handleClick(btn)}\n            style={{\n              padding: \"20px\",\n              fontSize: \"20px\",\n              borderRadius: \"10px\",\n              backgroundColor: [\"+\", \"-\", \"*\", \"/\", \"=\"].includes(btn) ? \"#f90\" : \"#555\",\n              color: \"#fff\",\n              gridColumn: btn === \"0\" ? \"span 2\" : \"auto\",\n              border: \"none\",\n              cursor: \"pointer\"\n            }}\n          >\n            {btn}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}